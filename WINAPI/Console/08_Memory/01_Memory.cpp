#include "Header.h"

void Start()
{
    // 동적할당을 할 시 new 연산자를 사용합니다.
    int * p  = new int;
    // new 자료형 : 해당 자료형의 공간을 동적할당하고 
    //             할당한 주소를 반환합니다.
    // 식별자가 존재하지 않기 때문에 포인터 형태로
    // 해당 공간을 가리켜 사용합니다.

    // 간접 참조를 통해 해당 공간의 값을 10으로 초기화합니다.
    *p = 10;
    
    // 동적할당한 공간의 사용을 마쳤다면 반드시 해제합니다.
    // 해제할 때 delete 연산자를 사용합니다.
    delete p;
    // delete 주소 : 주소값에 위치한 동적할당한 공간을 해제합니다.

    // 해제가 끝났다면 nullptr 로 초기화합니다.
    p = nullptr;
    // delete 는 동적할당한 공간을 해제한 것 이지
    // 주소값을 저장하고 있는 공간인 포인터 변수를 해제해준 것이 아닙니다.
    // 포인터는 여전히 동적할당된 공간을 가르키고 있고
    // 해당 공간은 존재하지 않기 때문에 댕글링 포인터가 되므로
    // 아무것도 가르키지 않겠다라는 nullptr 로 초기화해줘야 합니다.

    // 댕글링 포인터 : 존재하지 않는 공간을 가리키고 있는 포인터

}

void KeyDown(WPARAM wParam)
{
    switch (wParam)
    {

    }
}

void Paint(HDC& hdc)
{

}

void Update()
{

}
